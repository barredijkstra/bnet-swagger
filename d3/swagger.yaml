swagger: '2.0'
info:
  version: 1.0.0
  title: Blizzard Developer API - Diablo 3 community API.
  termsOfService: https://dev.battle.net/policy
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
externalDocs:
  description: Blizzard Development documentation
  url: https://dev.battle.net/io-docs
tags:
  - name: profile
  - name: data
  - name: d3
paths:
  /d3/profile/{battleTag}/:
    get:
      summary: Returns the career profile of a Battle Tag
      operationId: getCareerProfile
      tags:
        - profile
        - d3
      parameters:
        - $ref: '#/parameters/battleTag'
        - $ref: '#/parameters/locale'
        - $ref: '#/parameters/callback'
      responses:
        '200':
          description: The character profile.
        default:
          $ref: '#/responses/defaultErrorResponse'
      security:
        - api_key: []
  /d3/profile/{battleTag}/hero/{id}:
    get:
      summary: Returns the career profile of a Battle Tag
      operationId: getHeroProfile
      tags:
        - profile
        - d3
      parameters:
        - $ref: '#/parameters/battleTag'
        - name: id
          in: path
          type: integer
          format: int64
          description: The hero id of the hero to look up
          required: true
        - $ref: '#/parameters/locale'
        - $ref: '#/parameters/callback'
      responses:
        default:
          $ref: '#/responses/defaultErrorResponse'
      security:
        - api_key: []
  /d3/data/item/{data}:
    get:
      summary: Returns data for a profile item
      operationId: getItemData
      tags:
        - profile
        - data
        - d3
      parameters:
        - name: data
          in: path
          type: string
          description: The item data string (from a profile) containing the item to lookup
          required: true
        - $ref: '#/parameters/locale'
        - $ref: '#/parameters/callback'
      responses:
        default:
          $ref: '#/responses/defaultErrorResponse'
      security:
        - api_key: []
  /d3/data/follower/{follower}:
    get:
      summary: Returns data for a follower
      operationId: getFollowerData
      tags:
        - data
        - d3
      parameters:
        - name: follower
          in: path
          type: string
          description: The data about a follower
          required: true
          enum:
            - enchantress
            - scoundrel
            - templar
        - $ref: '#/parameters/locale'
        - $ref: '#/parameters/callback'
      responses:
        default:
          $ref: '#/responses/defaultErrorResponse'
      security:
        - api_key: []
  /d3/data/artisan/{artisan}:
    get:
      summary: Returns data for a profile item
      operationId: getArtisanData
      tags:
        - data
        - d3
      parameters:
        - name: artisan
          in: path
          type: string
          description: The data about an artisan
          required: true
          enum:
            - blacksmith
            - jeweler
            - mystic
        - $ref: '#/parameters/locale'
        - $ref: '#/parameters/callback'
      responses:
        default:
          $ref: '#/responses/defaultErrorResponse'
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    in: query
    name: apikey
parameters:
  locale:
    name: locale
    in: query
    type: string
    description: 'What locale to use in the response'
    required: false
  callback:
    name: callback
    in: query
    type: string
    description: 'Request data to be returned as a JsonP callback'
    required: false
  battleTag:
    name: battleTag
    in: path
    type: string
    description: 'Battle Tag in name-#### format (ie. Noob-1234)'
    required: true
definitions:
  errorResult:
    type: object
    description: Object that is return when an error occured with a call.
    properties:
      code:
        title: error code
        description: The error code.
        type: string
      reason:
        title: error reason
        description: The reason for the error.
        type: string
responses:
  defaultErrorResponse:
    description: 'Unexpected error'
    schema:
      $ref: '#/definitions/errorResult'
    headers:
      X-Plan-Qps-Allotted:
        description: 'The number of allowed requests per second'
        type: integer
        format: int64
      X-Plan-Qps-Current:
        description: 'The number of executed requests in the last second'
        type: integer
        format: int64
      X-Plan-Quota-Allotted:
        description: 'The number of allowed requests in the current period'
        type: integer
        format: int64
      X-Plan-Quota-Current:
        description: 'The number of executed requests in the current period'
        type: integer
        format: int64
      X-Plan-Quota-Reset:
        description: 'The timesstamp of when the used quota resets'
        type: string
